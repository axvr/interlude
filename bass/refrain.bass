(def *memos* *dir*/bass.lock)

(provide
  [clj clj-kondo lint test-clj test-cljs build-jar checks]

  (defn with-clj-cache [thunk]
    (-> thunk
        (with-mount (cache-dir "java-m2-cache") /root/.m2/repository/)
        (with-mount (cache-dir "clojure-git-cache") /root/.gitlibs/)))

  (def clj-img
    (from (linux/clojure :tools-deps)
      ($ apt-get update)
      ($ apt-get -y install nodejs)))

  (defn clj [src & args]
    (-> ($ clojure & $args)
        (with-dir src)
        (with-clj-cache)
        (with-image clj-img)))

  (defn clj-kondo [src & args]
    (from (linux/cljkondo/clj-kondo)
      (cd src
        ($ clj-kondo & $args))))

  (defn lint [src]
    (clj-kondo src "--lint" "src" "test"))

  (defn test-clj [src]
    (clj src "-X:test"))

  (defn test-cljs [src]
    (clj src "-M:cljs-test"))

  (defn build-jar [src]
    (clj src "-T:build" "jar"))

  (defn checks [src]
    {:lint      (lint src)
     :test-clj  (test-clj src)
     :test-cljs (test-cljs src)
     :build-jar (build-jar src)}))
